{"version":3,"sources":["app/js/toggle.js"],"names":["radioList","document","querySelector","radios","querySelectorAll","bodyEl","getCSSCustomProp","propKey","response","getComputedStyle","documentElement","getPropertyValue","length","replace","trim","setTheme","localStorage","setItem","theme","setColorMode","currentSetting","getItem","removeAttribute","classList","add","getElementById","click","tabFocus","forEach","radio","addEventListener","e","setAttribute","target","getAttribute","keyCode","preventDefault","focus"],"mappings":";AAAA,IAAMA,EAAYC,SAASC,cAAc,uBACnCC,EAASH,EAAUI,iBAAiB,kBACpCC,EAASJ,SAASC,cAAc,QAEhCI,EAAmB,SAACC,GACzB,IAAIC,EAAWC,iBAAiBR,SAASS,iBAAiBC,iBAAiBJ,GAM3E,OAJIC,EAASI,SACZJ,EAAWA,EAASK,QAAQ,MAAO,IAAIC,QAGjCN,GAGFO,EAAW,WAChBC,aAAaC,QAAQ,eAAgBC,QAGhCC,EAAe,WACpB,IAAIC,EAAiBJ,aAAaK,QAAQ,gBAEvB,OAAnBD,IAA2BA,EAAiBd,EAAiB,iBAE7DU,aAAaC,QAAQ,eAAgBG,GAErCf,EAAOiB,gBAAgB,SACvBjB,EAAOkB,UAAUC,IAAIJ,GACrBnB,SAASwB,eAAeL,GAAgBM,SAGzCP,IAEA,IAAIQ,EAAW,EAEfxB,EAAOyB,QAAQ,SAACC,GAAD,OACdA,EAAMC,iBAAiB,QAAS,SAACC,GAChC5B,EAAOyB,QAAQ,SAACC,GAAD,OAAWA,EAAMG,aAAa,YAAa,KAC1Dd,MAAQa,EAAEE,OAAOC,aAAa,MAC9BL,EAAMG,aAAa,eAAgB,QACnCH,EAAMG,aAAa,gBAAiB,QACpC3B,EAAOiB,gBAAgB,SACvBjB,EAAOkB,UAAUC,IAAIN,OACrBW,EAAMG,aAAa,WAAY,GAC/BhB,aAAaC,QAAQ,eAAgBC,WAIvClB,EAAU8B,iBAAiB,UAAW,SAACC,GAClB,KAOnBA,EAAEI,SANkB,KAOpBJ,EAAEI,SANe,KAOjBJ,EAAEI,SANiB,KAOnBJ,EAAEI,UAEFhC,EAAOwB,GAAUK,aAAa,YAAa,GAC3C7B,EAAOwB,GAAUK,aAAa,eAAgB,SAC9C7B,EAAOwB,GAAUK,aAAa,gBAAiB,SAC/C3B,EAAOiB,gBAAgB,UAdH,KAkBjBS,EAAEI,SAjBY,KAiBgBJ,EAAEI,UACnCJ,EAAEK,mBACFT,GACgBxB,EAAOS,SACtBe,EAAW,IAvBO,KA0BhBI,EAAEI,SAvBc,KAuBaJ,EAAEI,UAClCJ,EAAEK,mBACFT,EACe,IACdA,EAAWxB,EAAOS,OAAS,IAI7B,IAAMM,EAAQf,EAAOwB,GAAUO,aAAa,MAE5C/B,EAAOwB,GAAUK,aAAa,WAAY,GAC1C7B,EAAOwB,GAAUK,aAAa,eAAgB,QAC9C7B,EAAOwB,GAAUK,aAAa,gBAAiB,QAC/CjB,IACAV,EAAOkB,UAAUC,IAAIN,GACrBf,EAAOwB,GAAUU,QACjBlC,EAAOwB,GAAUD","file":"toggle.3f0a5f21.js","sourceRoot":"..","sourcesContent":["const radioList = document.querySelector('[role=\"radiogroup\"]');\nconst radios = radioList.querySelectorAll('[role=\"radio\"]');\nconst bodyEl = document.querySelector('body');\n\nconst getCSSCustomProp = (propKey) => {\n\tlet response = getComputedStyle(document.documentElement).getPropertyValue(propKey);\n\n\tif (response.length) {\n\t\tresponse = response.replace(/\\\"/g, '').trim();\n\t}\n\n\treturn response;\n};\n\nconst setTheme = () => {\n\tlocalStorage.setItem('--color-mode', theme);\n};\n\nconst setColorMode = () => {\n\tlet currentSetting = localStorage.getItem('--color-mode');\n\n\tcurrentSetting === null ? (currentSetting = getCSSCustomProp('--color-mode')) : 'dark';\n\n\tlocalStorage.setItem('--color-mode', currentSetting);\n\n\tbodyEl.removeAttribute('class');\n\tbodyEl.classList.add(currentSetting);\n\tdocument.getElementById(currentSetting).click();\n};\n\nsetColorMode();\n\nlet tabFocus = 0;\n\nradios.forEach((radio) =>\n\tradio.addEventListener('click', (e) => {\n\t\tradios.forEach((radio) => radio.setAttribute('tabindex', -1));\n\t\ttheme = e.target.getAttribute('id');\n\t\tradio.setAttribute('aria-checked', 'true');\n\t\tradio.setAttribute('aria-selected', 'true');\n\t\tbodyEl.removeAttribute('class');\n\t\tbodyEl.classList.add(theme);\n\t\tradio.setAttribute('tabindex', 0);\n\t\tlocalStorage.setItem('--color-mode', theme);\n\t})\n);\n\nradioList.addEventListener('keydown', (e) => {\n\tconst keydownLeft = 37;\n\tconst keydownRight = 39;\n\tconst keydownUp = 38;\n\tconst keydownDown = 40;\n\n\t// change the tabindex of the current tab to -1\n\tif (\n\t\te.keyCode === keydownLeft ||\n\t\te.keyCode === keydownRight ||\n\t\te.keyCode === keydownUp ||\n\t\te.keyCode === keydownDown\n\t) {\n\t\tradios[tabFocus].setAttribute('tabindex', -1);\n\t\tradios[tabFocus].setAttribute('aria-checked', 'false');\n\t\tradios[tabFocus].setAttribute('aria-selected', 'false');\n\t\tbodyEl.removeAttribute('class');\n\t}\n\n\t// if the right key is pushed, move to the next tab to the right\n\tif (e.keyCode === keydownRight || e.keyCode === keydownUp) {\n\t\te.preventDefault();\n\t\ttabFocus++;\n\t\tif (tabFocus >= radios.length) {\n\t\t\ttabFocus = 0;\n\t\t}\n\t}\n\tif (e.keyCode === keydownLeft || e.keyCode === keydownDown) {\n\t\te.preventDefault();\n\t\ttabFocus--;\n\t\tif (tabFocus < 0) {\n\t\t\ttabFocus = radios.length - 1;\n\t\t}\n\t}\n\n\tconst theme = radios[tabFocus].getAttribute('id');\n\n\tradios[tabFocus].setAttribute('tabindex', 0);\n\tradios[tabFocus].setAttribute('aria-checked', 'true');\n\tradios[tabFocus].setAttribute('aria-selected', 'true');\n\tsetTheme();\n\tbodyEl.classList.add(theme);\n\tradios[tabFocus].focus();\n\tradios[tabFocus].click();\n});\n"]}