{"version":3,"sources":["app/js/main.js"],"names":["Calculator","previousOperandTextElement","currentOperandTextElement","clear","currentOperand","previousOperand","operation","undefined","toString","slice","number","includes","compute","computation","prev","parseFloat","current","isNaN","stringNumber","integerDigits","split","decimalDigits","integerDisplay","toLocaleString","maximumFractionDigits","innerText","getDisplayNumber","numberButons","document","querySelectorAll","operationButtons","equalsButton","querySelector","resetButton","deleteButton","calculator","forEach","button","addEventListener","appendNumber","updateDisplay","chooseOperation","delete"],"mappings":"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","file":"main.3da0a6d0.js","sourceRoot":"..","sourcesContent":["class Calculator {\n\tconstructor(previousOperandTextElement, currentOperandTextElement) {\n\t\tthis.previousOperandTextElement = previousOperandTextElement;\n\t\tthis.currentOperandTextElement = currentOperandTextElement;\n\t\tthis.clear();\n\t}\n\n\tclear() {\n\t\tthis.currentOperand = '';\n\t\tthis.previousOperand = '';\n\t\tthis.operation = undefined;\n\t}\n\tdelete() {\n\t\tthis.currentOperand = this.currentOperand.toString().slice(0, -1);\n\t}\n\n\tappendNumber(number) {\n\t\tif (number === '.' && this.currentOperand.includes('.')) return;\n\n\t\tthis.currentOperand = this.currentOperand.toString() + number.toString();\n\t}\n\n\tchooseOperation(operation) {\n\t\tif (this.currentOperand === '') return;\n\t\tif (this.previousOperand !== '') {\n\t\t\tthis.compute();\n\t\t}\n\t\tthis.operation = operation;\n\t\tthis.previousOperand = this.currentOperand;\n\t\tthis.currentOperand = '';\n\t}\n\n\tcompute() {\n\t\tlet computation;\n\t\tconst prev = parseFloat(this.previousOperand);\n\t\tconst current = parseFloat(this.currentOperand);\n\n\t\tif (isNaN(prev) || isNaN(current)) return;\n\t\tswitch (this.operation) {\n\t\t\tcase '+':\n\t\t\t\tcomputation = prev + current;\n\t\t\t\tbreak;\n\t\t\tcase '-':\n\t\t\t\tcomputation = prev - current;\n\t\t\t\tbreak;\n\t\t\tcase '/':\n\t\t\t\tcomputation = prev / current;\n\t\t\t\tbreak;\n\t\t\tcase 'x':\n\t\t\t\tcomputation = prev * current;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn;\n\t\t}\n\n\t\tthis.currentOperand = computation;\n\t\tthis.operation = undefined;\n\t\tthis.previousOperand = '';\n\t}\n\n\tgetDisplayNumber(number) {\n\t\tconst stringNumber = number.toString();\n\t\tconst integerDigits = parseFloat(stringNumber.split('.')[0]);\n\t\tconst decimalDigits = stringNumber.split('.')[1];\n\t\tlet integerDisplay;\n\t\tif (isNaN(integerDigits)) {\n\t\t\tintegerDisplay = '';\n\t\t} else {\n\t\t\tintegerDisplay = integerDigits.toLocaleString('en', { maximumFractionDigits: 0 });\n\t\t}\n\t\tif (decimalDigits != null) {\n\t\t\treturn `${integerDisplay}.${decimalDigits}`;\n\t\t} else {\n\t\t\treturn integerDisplay;\n\t\t}\n\t}\n\n\tupdateDisplay() {\n\t\tthis.currentOperandTextElement.innerText = this.getDisplayNumber(this.currentOperand);\n\n\t\tif (this.operation != null) {\n\t\t\tthis.previousOperandTextElement.innerText = `${this.getDisplayNumber(this.previousOperand)} ${\n\t\t\t\tthis.operation\n\t\t\t}`;\n\t\t} else {\n\t\t\tthis.previousOperandTextElement.innerText = '';\n\t\t}\n\t}\n}\n\nconst numberButons = document.querySelectorAll('[data-key]');\nconst operationButtons = document.querySelectorAll('[data-operation]');\n\nconst equalsButton = document.querySelector('[data-equals]');\nconst resetButton = document.querySelector('[data-reset]');\nconst deleteButton = document.querySelector('[data-delete]');\n\nconst previousOperandTextElement = document.querySelector('[data-previous-operand]');\nconst currentOperandTextElement = document.querySelector('[data-current-operand]');\n\nconst calculator = new Calculator(previousOperandTextElement, currentOperandTextElement);\n\nnumberButons.forEach((button) =>\n\tbutton.addEventListener('click', () => {\n\t\tcalculator.appendNumber(button.innerText);\n\t\tcalculator.updateDisplay();\n\t})\n);\n\noperationButtons.forEach((button) => {\n\tbutton.addEventListener('click', () => {\n\t\tcalculator.chooseOperation(button.innerText);\n\t\tcalculator.updateDisplay();\n\t});\n});\n\nequalsButton.addEventListener('click', (button) => {\n\tcalculator.compute();\n\tcalculator.updateDisplay();\n});\n\nresetButton.addEventListener('click', () => {\n\tcalculator.clear();\n\tcalculator.updateDisplay();\n});\n\ndeleteButton.addEventListener('click', () => {\n\tcalculator.delete();\n\tcalculator.updateDisplay();\n});\n"]}